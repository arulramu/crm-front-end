{"ast":null,"code":"var _jsxFileName = \"D:\\\\CRM Final\\\\with material UI\\\\27-05-2024\\\\CRM-TOOL\\\\crm\\\\src\\\\components\\\\atoms\\\\refresh.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Container, Grid } from '@mui/material';\nimport config from '../../config/config'; // Import the configuration file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Refresh = () => {\n  _s();\n  const [menuData, setMenuData] = useState([]);\n  useEffect(() => {\n    fetchMenuData(); // Fetch menu data initially\n  }, []);\n  const fetchMenuData = () => {\n    axios.get(`${config.apiUrl}/menudata`) // Use apiUrl from the configuration file\n    .then(response => {\n      console.log('Data received:', response.data);\n      setMenuData(response.data);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  };\n  const handleRefresh = () => {\n    fetchMenuData(); // Fetch menu data again when refresh icon is clicked\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: menuData.map((menuItem, index) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: menuItem.menu.menu_bar.menu_images.refresh_icon.icon,\n          alt: \"icon\",\n          style: {\n            width: '30px',\n            height: 'auto',\n            cursor: 'pointer'\n          } // Adjust styling as needed\n          ,\n          onClick: handleRefresh // Call handleRefresh function on click\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(Refresh, \"wAtO6ChhDU7gYpIJpzxX8qH45+I=\");\n_c = Refresh;\nexport default Refresh;\nvar _c;\n$RefreshReg$(_c, \"Refresh\");","map":{"version":3,"names":["React","useState","useEffect","axios","Container","Grid","config","jsxDEV","_jsxDEV","Refresh","_s","menuData","setMenuData","fetchMenuData","get","apiUrl","then","response","console","log","data","catch","error","handleRefresh","children","container","spacing","map","menuItem","index","item","src","menu","menu_bar","menu_images","refresh_icon","icon","alt","style","width","height","cursor","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/CRM Final/with material UI/27-05-2024/CRM-TOOL/crm/src/components/atoms/refresh.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Container, Grid } from '@mui/material';\r\nimport config from '../../config/config'; // Import the configuration file\r\n\r\nconst Refresh = () => {\r\n  const [menuData, setMenuData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchMenuData(); // Fetch menu data initially\r\n  }, []);\r\n\r\n  const fetchMenuData = () => {\r\n    axios.get(`${config.apiUrl}/menudata`) // Use apiUrl from the configuration file\r\n      .then((response) => {\r\n        console.log('Data received:', response.data);\r\n        setMenuData(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching data:', error);\r\n      });\r\n  };\r\n\r\n  const handleRefresh = () => {\r\n    fetchMenuData(); // Fetch menu data again when refresh icon is clicked\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Grid container spacing={2}>\r\n        {menuData.map((menuItem, index) => (\r\n          <Grid item key={index}>\r\n            {/* Assuming menuItem.menubar_images.refresh_icon.icon is the URL of the image */}\r\n            <img\r\n              src={menuItem.menu.menu_bar.menu_images.refresh_icon.icon}\r\n              alt='icon'\r\n              style={{ width: '30px', height: 'auto', cursor: 'pointer' }} // Adjust styling as needed\r\n              onClick={handleRefresh} // Call handleRefresh function on click\r\n            />\r\n            \r\n          </Grid> \r\n        ))}\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Refresh;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,IAAI,QAAQ,eAAe;AAC/C,OAAOC,MAAM,MAAM,qBAAqB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACdW,aAAa,CAAC,CAAC,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,aAAa,GAAGA,CAAA,KAAM;IAC1BV,KAAK,CAACW,GAAG,CAAE,GAAER,MAAM,CAACS,MAAO,WAAU,CAAC,CAAC;IAAA,CACpCC,IAAI,CAAEC,QAAQ,IAAK;MAClBC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,QAAQ,CAACG,IAAI,CAAC;MAC5CR,WAAW,CAACK,QAAQ,CAACG,IAAI,CAAC;IAC5B,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBJ,OAAO,CAACI,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CAAC;EACN,CAAC;EAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1BV,aAAa,CAAC,CAAC,CAAC,CAAC;EACnB,CAAC;EAED,oBACEL,OAAA,CAACJ,SAAS;IAAAoB,QAAA,eACRhB,OAAA,CAACH,IAAI;MAACoB,SAAS;MAACC,OAAO,EAAE,CAAE;MAAAF,QAAA,EACxBb,QAAQ,CAACgB,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBAC5BrB,OAAA,CAACH,IAAI;QAACyB,IAAI;QAAAN,QAAA,eAERhB,OAAA;UACEuB,GAAG,EAAEH,QAAQ,CAACI,IAAI,CAACC,QAAQ,CAACC,WAAW,CAACC,YAAY,CAACC,IAAK;UAC1DC,GAAG,EAAC,MAAM;UACVC,KAAK,EAAE;YAAEC,KAAK,EAAE,MAAM;YAAEC,MAAM,EAAE,MAAM;YAAEC,MAAM,EAAE;UAAU,CAAE,CAAC;UAAA;UAC7DC,OAAO,EAAEnB,aAAc,CAAC;QAAA;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzB;MAAC,GAPYjB,KAAK;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASf,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEhB,CAAC;AAACpC,EAAA,CAxCID,OAAO;AAAAsC,EAAA,GAAPtC,OAAO;AA0Cb,eAAeA,OAAO;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}