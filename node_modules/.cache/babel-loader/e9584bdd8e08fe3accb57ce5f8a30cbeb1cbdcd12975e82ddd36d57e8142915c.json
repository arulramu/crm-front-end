{"ast":null,"code":"var _jsxFileName = \"D:\\\\CRM Final\\\\with material UI\\\\27-05-2024\\\\CRM-TOOL\\\\crm\\\\src\\\\components\\\\atoms\\\\full_screen.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport _ from 'lodash';\nimport { Button } from '@mui/material';\nimport config from '../../config/config'; // Import the configuration file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FullScreen = () => {\n  _s();\n  const [isFullScreen, setIsFullScreen] = useState(false);\n  const [logoData, setLogoData] = useState([]);\n  const handleResize = _.debounce(() => {\n    console.log('Resized!');\n  }, 300);\n  const toggleFullScreen = () => {\n    const elem = document.documentElement;\n    if (!isFullScreen) {\n      if (elem.requestFullscreen) {\n        elem.requestFullscreen();\n      } else if (elem.mozRequestFullScreen) {\n        elem.mozRequestFullScreen();\n      } else if (elem.webkitRequestFullscreen) {\n        elem.webkitRequestFullscreen();\n      } else if (elem.msRequestFullscreen) {\n        elem.msRequestFullscreen();\n      }\n    } else {\n      if (document.exitFullscreen) {\n        document.exitFullscreen();\n      } else if (document.mozCancelFullScreen) {\n        document.mozCancelFullScreen();\n      } else if (document.webkitExitFullscreen) {\n        document.webkitExitFullscreen();\n      } else if (document.msExitFullscreen) {\n        document.msExitFullscreen();\n      }\n    }\n  };\n  useEffect(() => {\n    document.title = 'CRM';\n    const handleFullScreenChange = () => {\n      setIsFullScreen(!!(document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement || document.msFullscreenElement));\n    };\n    document.addEventListener('fullscreenchange', handleFullScreenChange);\n    document.addEventListener('mozfullscreenchange', handleFullScreenChange);\n    document.addEventListener('webkitfullscreenchange', handleFullScreenChange);\n    document.addEventListener('msfullscreenchange', handleFullScreenChange);\n    const resizeObserver = new ResizeObserver(handleResize);\n    resizeObserver.observe(document.documentElement);\n    return () => {\n      document.title = 'Default Title';\n      document.removeEventListener('fullscreenchange', handleFullScreenChange);\n      document.removeEventListener('mozfullscreenchange', handleFullScreenChange);\n      document.removeEventListener('webkitfullscreenchange', handleFullScreenChange);\n      document.removeEventListener('msfullscreenchange', handleFullScreenChange);\n      resizeObserver.disconnect();\n    };\n  }, [handleResize]);\n  useEffect(() => {\n    axios.get(`${config.apiUrl}/menudata`) // Use apiUrl from the configuration file\n    .then(response => {\n      console.log('Data received:', response.data);\n      setLogoData(response.data);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header_button\",\n    children: logoData.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fullscreen\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        id: \"exitFullscreenButton\",\n        className: \"header_buttons\",\n        onClick: toggleFullScreen,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"full_screen_img\",\n          alt: \"\",\n          src: item.menu.header.full_screen.full_screen_icon,\n          style: {\n            height: 20,\n            padding: '30px 15px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(FullScreen, \"LXVwvQzo2eb2rBtnegFOT5BVVOQ=\");\n_c = FullScreen;\nexport default FullScreen;\nvar _c;\n$RefreshReg$(_c, \"FullScreen\");","map":{"version":3,"names":["React","useState","useEffect","axios","_","Button","config","jsxDEV","_jsxDEV","FullScreen","_s","isFullScreen","setIsFullScreen","logoData","setLogoData","handleResize","debounce","console","log","toggleFullScreen","elem","document","documentElement","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","exitFullscreen","mozCancelFullScreen","webkitExitFullscreen","msExitFullscreen","title","handleFullScreenChange","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","msFullscreenElement","addEventListener","resizeObserver","ResizeObserver","observe","removeEventListener","disconnect","get","apiUrl","then","response","data","catch","error","className","children","map","item","index","id","onClick","alt","src","menu","header","full_screen","full_screen_icon","style","height","padding","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/CRM Final/with material UI/27-05-2024/CRM-TOOL/crm/src/components/atoms/full_screen.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport { Button } from '@mui/material';\r\nimport config from '../../config/config'; // Import the configuration file\r\n\r\nconst FullScreen = () => {\r\n  const [isFullScreen, setIsFullScreen] = useState(false);\r\n  const [logoData, setLogoData] = useState([]);\r\n\r\n  const handleResize = _.debounce(() => {\r\n    console.log('Resized!');\r\n  }, 300);\r\n\r\n  const toggleFullScreen = () => {\r\n    const elem = document.documentElement;\r\n\r\n    if (!isFullScreen) {\r\n      if (elem.requestFullscreen) {\r\n        elem.requestFullscreen();\r\n      } else if (elem.mozRequestFullScreen) {\r\n        elem.mozRequestFullScreen();\r\n      } else if (elem.webkitRequestFullscreen) {\r\n        elem.webkitRequestFullscreen();\r\n      } else if (elem.msRequestFullscreen) {\r\n        elem.msRequestFullscreen();\r\n      }\r\n    } else {\r\n      if (document.exitFullscreen) {\r\n        document.exitFullscreen();\r\n      } else if (document.mozCancelFullScreen) {\r\n        document.mozCancelFullScreen();\r\n      } else if (document.webkitExitFullscreen) {\r\n        document.webkitExitFullscreen();\r\n      } else if (document.msExitFullscreen) {\r\n        document.msExitFullscreen();\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.title = 'CRM';\r\n\r\n    const handleFullScreenChange = () => {\r\n      setIsFullScreen(!!(document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement || document.msFullscreenElement));\r\n    };\r\n\r\n    document.addEventListener('fullscreenchange', handleFullScreenChange);\r\n    document.addEventListener('mozfullscreenchange', handleFullScreenChange);\r\n    document.addEventListener('webkitfullscreenchange', handleFullScreenChange);\r\n    document.addEventListener('msfullscreenchange', handleFullScreenChange);\r\n\r\n    const resizeObserver = new ResizeObserver(handleResize);\r\n    resizeObserver.observe(document.documentElement);\r\n\r\n    return () => {\r\n      document.title = 'Default Title';\r\n\r\n      document.removeEventListener('fullscreenchange', handleFullScreenChange);\r\n      document.removeEventListener('mozfullscreenchange', handleFullScreenChange);\r\n      document.removeEventListener('webkitfullscreenchange', handleFullScreenChange);\r\n      document.removeEventListener('msfullscreenchange', handleFullScreenChange);\r\n\r\n      resizeObserver.disconnect();\r\n    };\r\n  }, [handleResize]);\r\n\r\n  useEffect(() => {\r\n    axios.get(`${config.apiUrl}/menudata`) // Use apiUrl from the configuration file\r\n      .then((response) => {\r\n        console.log('Data received:', response.data);\r\n        setLogoData(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching data:', error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className='header_button'>\r\n      {logoData.map((item, index) => (\r\n        <div key={index} className=\"fullscreen\" >\r\n          <Button\r\n            id=\"exitFullscreenButton\"\r\n            className=\"header_buttons\"\r\n            onClick={toggleFullScreen}\r\n           \r\n           \r\n          >\r\n            <img className=\"full_screen_img\" alt=\"\" src={item.menu.header.full_screen.full_screen_icon}  style={{ height: 20, padding:'30px 15px' }} />\r\n          </Button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FullScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}